const { Client, GatewayIntentBits, ChannelType } = require('discord.js');
const { joinVoiceChannel, VoiceConnectionStatus } = require('@discordjs/voice');

const token = process.env.TOKEN;
const channelId = process.env.CHANNEL_ID;

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildVoiceStates,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});

let connection;
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
client.once('ready', async () => {
    console.log(`${client.user.tag} olarak giriş yapıldı!`);
    //OYNUYOR KISMI!!!!
    try {
        await client.user.setPresence({
            activities: [{ name: 'discord.gg/vsc', type: 3 }], // 0 - PLAYING, 1 - KULLANMAYIN! , 2 - LISTENING, 3 - WATCHING, 4 - CUSTOM, 5 - COMPETING
            status: 'online' // online: Çevrimiçi, dnd: Rahatsız Etmeyin, idle: Boşta, invisible: Görünmez
        });
        console.log('Oynuyor durumu ayarlandı!');
    } catch (error) {
        console.error('Oynuyor durumu ayarlanamadı:', error);
    }

    connectToVoiceChannel();//BURAYA DOKUNMAYIN!
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////

client.on('voiceStateUpdate', (oldState, newState) => {
    if (oldState.member.id === client.user.id && !newState.channel) {
        console.log(`${client.user.tag} ses kanalından ayrıldı. Yeniden bağlanıyor...`);
        connectToVoiceChannel();
    }
});

function connectToVoiceChannel() {
    const channel = client.channels.cache.get(channelId);
    if (channel && channel.type === ChannelType.GuildVoice) {
        if (connection) {
            connection.destroy();
        }

        connection = joinVoiceChannel({
            channelId: channel.id,
            guildId: channel.guild.id,
            adapterCreator: channel.guild.voiceAdapterCreator,
            selfDeaf: false,
            selfMute: false
        });

        connection.on(VoiceConnectionStatus.Ready, () => {
            console.log(`${client.user.tag} ses kanalına bağlandı!`);
        });

        connection.on(VoiceConnectionStatus.Disconnected, () => {
            console.log(`${client.user.tag} ses kanalından ayrıldı.`);
        });
    } else {
        console.error(`Ses kanalı bulunamadı veya geçerli değil.`);
    }
}

client.login(token);
